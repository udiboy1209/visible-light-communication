
#ifndef LUT_8B10B
#define LUT_8B10B

#include <stdint.h>
#include <stdbool.h>
static uint16_t encode_lut[512] = {
0b1001110100,
0b0111010100,
0b1011010100,
0b1100011011,
0b1101010100,
0b1010011011,
0b0110011011,
0b1110001011,
0b1110010100,
0b1001011011,
0b0101011011,
0b1101001011,
0b0011011011,
0b1011001011,
0b0111001011,
0b0101110100,
0b0110110100,
0b1000111011,
0b0100111011,
0b1100101011,
0b0010111011,
0b1010101011,
0b0110101011,
0b1110100100,
0b1100110100,
0b1001101011,
0b0101101011,
0b1101100100,
0b0011101011,
0b1011100100,
0b0111100100,
0b1010110100,
0b1001111001,
0b0111011001,
0b1011011001,
0b1100011001,
0b1101011001,
0b1010011001,
0b0110011001,
0b1110001001,
0b1110011001,
0b1001011001,
0b0101011001,
0b1101001001,
0b0011011001,
0b1011001001,
0b0111001001,
0b0101111001,
0b0110111001,
0b1000111001,
0b0100111001,
0b1100101001,
0b0010111001,
0b1010101001,
0b0110101001,
0b1110101001,
0b1100111001,
0b1001101001,
0b0101101001,
0b1101101001,
0b0011101001,
0b1011101001,
0b0111101001,
0b1010111001,
0b1001110101,
0b0111010101,
0b1011010101,
0b1100010101,
0b1101010101,
0b1010010101,
0b0110010101,
0b1110000101,
0b1110010101,
0b1001010101,
0b0101010101,
0b1101000101,
0b0011010101,
0b1011000101,
0b0111000101,
0b0101110101,
0b0110110101,
0b1000110101,
0b0100110101,
0b1100100101,
0b0010110101,
0b1010100101,
0b0110100101,
0b1110100101,
0b1100110101,
0b1001100101,
0b0101100101,
0b1101100101,
0b0011100101,
0b1011100101,
0b0111100101,
0b1010110101,
0b1001110011,
0b0111010011,
0b1011010011,
0b1100011100,
0b1101010011,
0b1010011100,
0b0110011100,
0b1110001100,
0b1110010011,
0b1001011100,
0b0101011100,
0b1101001100,
0b0011011100,
0b1011001100,
0b0111001100,
0b0101110011,
0b0110110011,
0b1000111100,
0b0100111100,
0b1100101100,
0b0010111100,
0b1010101100,
0b0110101100,
0b1110100011,
0b1100110011,
0b1001101100,
0b0101101100,
0b1101100011,
0b0011101100,
0b1011100011,
0b0111100011,
0b1010110011,
0b1001110010,
0b0111010010,
0b1011010010,
0b1100011101,
0b1101010010,
0b1010011101,
0b0110011101,
0b1110001101,
0b1110010010,
0b1001011101,
0b0101011101,
0b1101001101,
0b0011011101,
0b1011001101,
0b0111001101,
0b0101110010,
0b0110110010,
0b1000111101,
0b0100111101,
0b1100101101,
0b0010111101,
0b1010101101,
0b0110101101,
0b1110100010,
0b1100110010,
0b1001101101,
0b0101101101,
0b1101100010,
0b0011101101,
0b1011100010,
0b0111100010,
0b1010110010,
0b1001111010,
0b0111011010,
0b1011011010,
0b1100011010,
0b1101011010,
0b1010011010,
0b0110011010,
0b1110001010,
0b1110011010,
0b1001011010,
0b0101011010,
0b1101001010,
0b0011011010,
0b1011001010,
0b0111001010,
0b0101111010,
0b0110111010,
0b1000111010,
0b0100111010,
0b1100101010,
0b0010111010,
0b1010101010,
0b0110101010,
0b1110101010,
0b1100111010,
0b1001101010,
0b0101101010,
0b1101101010,
0b0011101010,
0b1011101010,
0b0111101010,
0b1010111010,
0b1001110110,
0b0111010110,
0b1011010110,
0b1100010110,
0b1101010110,
0b1010010110,
0b0110010110,
0b1110000110,
0b1110010110,
0b1001010110,
0b0101010110,
0b1101000110,
0b0011010110,
0b1011000110,
0b0111000110,
0b0101110110,
0b0110110110,
0b1000110110,
0b0100110110,
0b1100100110,
0b0010110110,
0b1010100110,
0b0110100110,
0b1110100110,
0b1100110110,
0b1001100110,
0b0101100110,
0b1101100110,
0b0011100110,
0b1011100110,
0b0111100110,
0b1010110110,
0b1001110001,
0b0111010001,
0b1011010001,
0b1100011110,
0b1101010001,
0b1010011110,
0b0110011110,
0b1110001110,
0b1110010001,
0b1001011110,
0b0101011110,
0b1101001110,
0b0011011110,
0b1011001110,
0b0111001110,
0b0101110001,
0b0110110001,
0b1000110111,
0b0100110111,
0b1100101110,
0b0010110111,
0b1010101110,
0b0110101110,
0b1110100001,
0b1100110001,
0b1001101110,
0b0101101110,
0b1101100001,
0b0011101110,
0b1011100001,
0b0111100001,
0b1010110001,
0b0110001011,
0b1000101011,
0b0100101011,
0b1100010100,
0b0010101011,
0b1010010100,
0b0110010100,
0b0001110100,
0b0001101011,
0b1001010100,
0b0101010100,
0b1101000100,
0b0011010100,
0b1011000100,
0b0111000100,
0b1010001011,
0b1001001011,
0b1000110100,
0b0100110100,
0b1100100100,
0b0010110100,
0b1010100100,
0b0110100100,
0b0001011011,
0b0011001011,
0b1001100100,
0b0101100100,
0b0010011011,
0b0011100100,
0b0100011011,
0b1000011011,
0b0101001011,
0b0110001001,
0b1000101001,
0b0100101001,
0b1100011001,
0b0010101001,
0b1010011001,
0b0110011001,
0b0001111001,
0b0001101001,
0b1001011001,
0b0101011001,
0b1101001001,
0b0011011001,
0b1011001001,
0b0111001001,
0b1010001001,
0b1001001001,
0b1000111001,
0b0100111001,
0b1100101001,
0b0010111001,
0b1010101001,
0b0110101001,
0b0001011001,
0b0011001001,
0b1001101001,
0b0101101001,
0b0010011001,
0b0011101001,
0b0100011001,
0b1000011001,
0b0101001001,
0b0110000101,
0b1000100101,
0b0100100101,
0b1100010101,
0b0010100101,
0b1010010101,
0b0110010101,
0b0001110101,
0b0001100101,
0b1001010101,
0b0101010101,
0b1101000101,
0b0011010101,
0b1011000101,
0b0111000101,
0b1010000101,
0b1001000101,
0b1000110101,
0b0100110101,
0b1100100101,
0b0010110101,
0b1010100101,
0b0110100101,
0b0001010101,
0b0011000101,
0b1001100101,
0b0101100101,
0b0010010101,
0b0011100101,
0b0100010101,
0b1000010101,
0b0101000101,
0b0110001100,
0b1000101100,
0b0100101100,
0b1100010011,
0b0010101100,
0b1010010011,
0b0110010011,
0b0001110011,
0b0001101100,
0b1001010011,
0b0101010011,
0b1101000011,
0b0011010011,
0b1011000011,
0b0111000011,
0b1010001100,
0b1001001100,
0b1000110011,
0b0100110011,
0b1100100011,
0b0010110011,
0b1010100011,
0b0110100011,
0b0001011100,
0b0011001100,
0b1001100011,
0b0101100011,
0b0010011100,
0b0011100011,
0b0100011100,
0b1000011100,
0b0101001100,
0b0110001101,
0b1000101101,
0b0100101101,
0b1100010010,
0b0010101101,
0b1010010010,
0b0110010010,
0b0001110010,
0b0001101101,
0b1001010010,
0b0101010010,
0b1101000010,
0b0011010010,
0b1011000010,
0b0111000010,
0b1010001101,
0b1001001101,
0b1000110010,
0b0100110010,
0b1100100010,
0b0010110010,
0b1010100010,
0b0110100010,
0b0001011101,
0b0011001101,
0b1001100010,
0b0101100010,
0b0010011101,
0b0011100010,
0b0100011101,
0b1000011101,
0b0101001101,
0b0110001010,
0b1000101010,
0b0100101010,
0b1100011010,
0b0010101010,
0b1010011010,
0b0110011010,
0b0001111010,
0b0001101010,
0b1001011010,
0b0101011010,
0b1101001010,
0b0011011010,
0b1011001010,
0b0111001010,
0b1010001010,
0b1001001010,
0b1000111010,
0b0100111010,
0b1100101010,
0b0010111010,
0b1010101010,
0b0110101010,
0b0001011010,
0b0011001010,
0b1001101010,
0b0101101010,
0b0010011010,
0b0011101010,
0b0100011010,
0b1000011010,
0b0101001010,
0b0110000110,
0b1000100110,
0b0100100110,
0b1100010110,
0b0010100110,
0b1010010110,
0b0110010110,
0b0001110110,
0b0001100110,
0b1001010110,
0b0101010110,
0b1101000110,
0b0011010110,
0b1011000110,
0b0111000110,
0b1010000110,
0b1001000110,
0b1000110110,
0b0100110110,
0b1100100110,
0b0010110110,
0b1010100110,
0b0110100110,
0b0001010110,
0b0011000110,
0b1001100110,
0b0101100110,
0b0010010110,
0b0011100110,
0b0100010110,
0b1000010110,
0b0101000110,
0b0110001110,
0b1000101110,
0b0100101110,
0b1100010001,
0b0010101110,
0b1010010001,
0b0110010001,
0b0001110001,
0b0001101110,
0b1001010001,
0b0101010001,
0b1101001000,
0b0011010001,
0b1011001000,
0b0111001000,
0b1010001110,
0b1001001110,
0b1000110001,
0b0100110001,
0b1100100001,
0b0010110001,
0b1010100001,
0b0110100001,
0b0001011110,
0b0011001110,
0b1001100001,
0b0101100001,
0b0010011110,
0b0011100001,
0b0100011110,
0b1000011110,
0b0101001110
};

static int8_t D_lut[512] = {-2,-2,-2,+2,-2,+2,+2,+2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,-2,+2,-2,-2,-2,+2,+2,+2,0,+2,0,0,-2,+2,0,0,0,0,0,0,+2,+2,0,0,0,0,0,0,+2,+2,0,0,+2,0,+2,+2,+2,+2,+2,+2,0,+2,0,0,-2,+2,0,0,0,0,0,0,+2,+2,0,0,0,0,0,0,+2,+2,0,0,+2,0,+2,+2,+2,+2,+2,+2,-2,+2,-2,-2,-2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,+2,-2,+2,+2,+2,-2,-2,-2,+2,-2,+2,+2,+2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,-2,+2,-2,-2,-2,+2,+2,+2,0,+2,0,0,-2,+2,0,0,0,0,0,0,+2,+2,0,0,0,0,0,0,+2,+2,0,0,+2,0,+2,+2,+2,+2,+2,+2,0,+2,0,0,-2,+2,0,0,0,0,0,0,+2,+2,0,0,0,0,0,0,+2,+2,0,0,+2,0,+2,+2,+2,-2,-2,-2,+2,-2,+2,+2,+2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,-2,+2,-2,-2,-2,+2,+2,+2,-2,+2,-2,-2,-2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,+2,-2,+2,+2,+2,-2,-2,-2,0,-2,0,0,+2,-2,0,0,0,0,0,0,-2,-2,0,0,0,0,0,0,-2,-2,0,0,-2,0,-2,-2,-2,-2,-2,-2,0,-2,0,0,+2,-2,0,0,0,0,0,0,-2,-2,0,0,0,0,0,0,-2,-2,0,0,-2,0,-2,-2,-2,-2,-2,-2,+2,-2,+2,+2,+2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,+2,+2,+2,+2,-2,-2,+2,+2,-2,+2,-2,-2,-2,+2,+2,+2,-2,+2,-2,-2,-2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,+2,-2,+2,+2,+2,-2,-2,-2,0,-2,0,0,+2,-2,0,0,0,0,0,0,-2,-2,0,0,0,0,0,0,-2,-2,0,0,-2,0,-2,-2,-2,-2,-2,-2,0,-2,0,0,+2,-2,0,0,0,0,0,0,-2,-2,0,0,0,0,0,0,-2,-2,0,0,-2,0,-2,-2,-2,+2,+2,+2,-2,+2,-2,-2,-2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,-2,-2,-2,-2,+2,+2,-2,-2,+2,-2,+2,+2,+2};

static uint8_t decode_lut[1024] = {
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
87,
215,
0,
0,
55,
183,
23,
119,
151,
247,
0,
0,
0,
0,
0,
0,
72,
200,
0,
0,
40,
168,
8,
104,
136,
232,
0,
0,
231,
135,
103,
7,
71,
199,
0,
0,
39,
167,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
91,
219,
0,
0,
59,
187,
27,
123,
155,
251,
0,
0,
0,
0,
0,
0,
68,
196,
0,
0,
36,
164,
4,
100,
132,
228,
0,
0,
244,
148,
116,
20,
84,
212,
244,
0,
52,
180,
20,
116,
148,
0,
0,
0,
0,
0,
0,
0,
88,
216,
0,
0,
56,
184,
24,
120,
152,
248,
0,
0,
236,
140,
108,
12,
76,
204,
0,
0,
44,
172,
12,
108,
140,
236,
0,
0,
252,
156,
124,
28,
92,
220,
0,
0,
60,
188,
28,
124,
156,
252,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
93,
221,
0,
0,
61,
189,
29,
125,
157,
253,
0,
0,
0,
0,
0,
0,
66,
194,
0,
0,
34,
162,
2,
98,
130,
226,
0,
0,
242,
146,
114,
18,
82,
210,
242,
0,
50,
178,
18,
114,
146,
0,
0,
0,
0,
0,
0,
0,
95,
223,
0,
0,
63,
191,
31,
127,
159,
255,
0,
0,
234,
138,
106,
10,
74,
202,
0,
0,
42,
170,
10,
106,
138,
234,
0,
0,
250,
154,
122,
26,
90,
218,
0,
0,
58,
186,
26,
122,
154,
250,
0,
0,
239,
143,
111,
15,
79,
207,
0,
0,
47,
175,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
64,
192,
0,
0,
32,
160,
0,
96,
128,
224,
0,
0,
230,
134,
102,
6,
70,
198,
0,
0,
38,
166,
6,
102,
134,
230,
0,
0,
246,
150,
118,
22,
86,
214,
0,
0,
54,
182,
22,
118,
150,
246,
0,
0,
240,
144,
112,
16,
80,
208,
0,
0,
48,
176,
0,
0,
0,
0,
0,
0,
0,
142,
110,
14,
78,
206,
0,
238,
46,
174,
14,
110,
142,
238,
0,
0,
225,
129,
97,
1,
65,
193,
0,
0,
33,
161,
0,
0,
0,
0,
0,
0,
254,
158,
126,
30,
94,
222,
0,
0,
62,
190,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
94,
222,
0,
0,
62,
190,
30,
126,
158,
254,
0,
0,
0,
0,
0,
0,
65,
193,
0,
0,
33,
161,
1,
97,
129,
225,
0,
0,
241,
145,
113,
17,
81,
209,
241,
0,
49,
177,
17,
113,
145,
0,
0,
0,
0,
0,
0,
0,
80,
208,
0,
0,
48,
176,
16,
112,
144,
240,
0,
0,
233,
137,
105,
9,
73,
201,
0,
0,
41,
169,
9,
105,
137,
233,
0,
0,
249,
153,
121,
25,
89,
217,
0,
0,
57,
185,
25,
121,
153,
249,
0,
0,
224,
128,
96,
0,
64,
192,
0,
0,
32,
160,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
79,
207,
0,
0,
47,
175,
15,
111,
143,
239,
0,
0,
229,
133,
101,
5,
69,
197,
0,
0,
37,
165,
5,
101,
133,
229,
0,
0,
245,
149,
117,
21,
85,
213,
0,
0,
53,
181,
21,
117,
149,
245,
0,
0,
255,
159,
127,
31,
95,
223,
0,
0,
63,
191,
0,
0,
0,
0,
0,
0,
0,
141,
109,
13,
77,
205,
0,
237,
45,
173,
13,
109,
141,
237,
0,
0,
226,
130,
98,
2,
66,
194,
0,
0,
34,
162,
0,
0,
0,
0,
0,
0,
253,
157,
125,
29,
93,
221,
0,
0,
61,
189,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
227,
131,
99,
3,
67,
195,
0,
0,
35,
163,
3,
99,
131,
227,
0,
0,
243,
147,
115,
19,
83,
211,
0,
0,
51,
179,
19,
115,
147,
243,
0,
0,
248,
152,
120,
24,
88,
216,
0,
0,
56,
184,
0,
0,
0,
0,
0,
0,
0,
139,
107,
11,
75,
203,
0,
235,
43,
171,
11,
107,
139,
235,
0,
0,
228,
132,
100,
4,
68,
196,
0,
0,
36,
164,
0,
0,
0,
0,
0,
0,
251,
155,
123,
27,
91,
219,
0,
0,
59,
187,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
71,
199,
0,
0,
39,
167,
7,
103,
135,
231,
0,
0,
232,
136,
104,
8,
72,
200,
0,
0,
40,
168,
0,
0,
0,
0,
0,
0,
247,
151,
119,
23,
87,
215,
0,
0,
55,
183,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
};


#endif
